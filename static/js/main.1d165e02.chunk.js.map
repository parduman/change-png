{"version":3,"sources":["components/main.js","App.js","reportWebVitals.js","index.js"],"names":["mainComponent","props","state","mergeImage","backgroundImage","overlayImage","overlayImagex","overlayImagey","backgroundImagex","backgroundImagey","event","name","target","files","this","setState","URL","createObjectURL","mergeImages","src","x","y","then","b64","e","value","canvas","document","createElement","height","width","ctx","getContext","filter","image","Image","onload","drawImage","toDataURL","class","style","display","justifyContent","for","id","type","onChange","uploadImage","positionchange","blurchange","onClick","href","download","alt","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1d165e02.chunk.js","sourcesContent":["import React from 'react';\nimport mergeImages from 'merge-images';\n\nclass mainComponent extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            mergeImage: \"\",\n            backgroundImage: \"\",\n            overlayImage: \"\",\n            overlayImagex: 0,\n            overlayImagey: 0,\n            backgroundImagex: 0,\n            backgroundImagey: 0,\n        }\n    }\n\n    uploadImage(event, name) {\n        if (event.target.files[0]) {\n            this.setState({\n                [name]: URL.createObjectURL(event.target.files[0])\n            })\n        }\n    }\n\n    mergeImage() {\n        let { backgroundImage, overlayImage, backgroundImagex, backgroundImagey, overlayImagex, overlayImagey } = this.state;\n        if(backgroundImage && overlayImage){\n            mergeImages([\n                { src: backgroundImage, x: backgroundImagex, y: backgroundImagey },\n                { src: overlayImage, x: overlayImagex, y: overlayImagey }\n            ]).then(b64 => {\n                this.setState({\n                    mergeImage: b64\n                })\n            });\n        }\n    }\n\n    positionchange(e) {\n        let { name, value } = e.target;\n        this.setState({\n            [name]: value\n        }, () => {\n            this.mergeImage();\n        })\n    }\n\n    blurchange(e) {\n        let { value } = e.target;\n        const canvas = document.createElement('canvas');\n        canvas.height = 400;\n        canvas.width = 400;\n        let ctx = canvas.getContext('2d');\n        ctx.filter = `blur(${value}px)`;\n        let image = new Image();\n        image.src = this.state.backgroundImage;\n        image.onload = () => {\n            ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n            this.setState({\n                backgroundImage: canvas.toDataURL(\"image/png\"),\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div class='mt-4'>\n                    <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n                        <div style={{ width: '35%' }}>\n                            <div>\n                                <label for=\"Imageinput\" class={this.state.overlayImage ? \"text-success\" : \"text-primary\"}>Select Image</label>\n                                <input id=\"Imageinput\" class=\"invisible\" type=\"file\" onChange={(e) => { this.uploadImage(e, 'overlayImage') }} />\n                            </div>\n                            {this.state.overlayImage ? <div>\n                                <div class=\"row mt-2\">\n                                    <div class=\"col-md-4\">\n                                        <label>X-Position</label>\n                                        <input type='number' class=\"form-control\" name='overlayImagex' value={this.state.overlayImagex} onChange={(e) => this.positionchange(e)} />\n                                    </div>\n                                    <div class=\"col-md-4\">\n                                        <label>y-Position</label>\n                                        <input type='number' class=\"form-control\" name='overlayImagey' value={this.state.overlayImagey} onChange={(e) => this.positionchange(e)} />\n                                    </div>\n                                </div>\n                            </div> : \"\"}\n                        </div>\n                        <div style={{ width: '35%' }}>\n                            <div>\n                                <label for=\"Imageinput2\" class={this.state.backgroundImage ? \"btn text-success\" : \"btn text-primary\"}>Select Background Image</label>\n                                <input id=\"Imageinput2\" class=\"invisible\" type=\"file\" onChange={(e) => { this.uploadImage(e, 'backgroundImage') }} />\n                            </div>\n                            {this.state.backgroundImage ? <div>\n                                <div class=\"row\">\n                                    <div class=\"col-md-4\">\n                                        <label>X-Position</label>\n                                        <input type='number' class=\"form-control\" name='backgroundImagex' value={this.state.backgroundImagex} onChange={(e) => this.positionchange(e)} />\n                                    </div>\n                                    <div class=\"col-md-4\">\n                                        <label>y-Position</label>\n                                        <input type='number' class=\"form-control\" name='backgroundImagey' value={this.state.backgroundImagey} onChange={(e) => this.positionchange(e)} />\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col\">\n                                        <label>Blur Value</label>\n                                        <input type='number' class=\"form-control\" onChange={(e) => this.blurchange(e)} />\n                                    </div>\n                                </div>\n                            </div>\n                                : \"\"\n                            }\n                        </div>\n                        <div style={{ width: '20%' }}>\n                            <button type=\"button\" class=\"btn btn-success\" onClick={(e) => { this.mergeImage() }}>Apply Changes</button>\n                        </div>\n                    </div>\n                </div>\n                {this.state.mergeImage ? <div class=\"text-center\">\n                    <a href={this.state.mergeImage} download><img class=\"mt-3\" style={{ height: 400, width: 400 }} id=\"123\" alt=\"aa\" src={this.state.mergeImage}></img></a>\n                </div> : \"\"}\n            </div>\n        );\n    }\n\n}\n\nexport default mainComponent;","import React from 'react';\nimport MainComponent from './components/main.js'\n\nclass App extends React.Component {\n  render(){\n    return (\n      <MainComponent />\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}